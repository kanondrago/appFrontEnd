{"ast":null,"code":"var _class;\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(http) {\n    this.http = http;\n    this.apiRoot = '/private/';\n  }\n  getList(related) {\n    const endpoint = 'users?related=transactions';\n    if (related.length) {\n      let query = '?related=';\n      for (let i = 0; i < related.length; i++) {\n        if (i > 0) {\n          query += ',' + related[i];\n        } else {\n          query += related[i];\n        }\n      }\n    }\n    return this.http.get(environment.api.url + this.apiRoot + endpoint);\n  }\n}\n_class = AdminService;\n_class.ɵfac = function AdminService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"mappings":";AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAI1D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAG,WAAW;EAEkB;EAChCC,OAAO,CAACC,OAAiB;IAC9B,MAAMC,QAAQ,GAAG,4BAA4B;IAC7C,IAAID,OAAO,CAACE,MAAM,EAAE;MAClB,IAAIC,KAAK,GAAG,WAAW;MACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,OAAO,CAACE,MAAM,EAAEE,CAAC,EAAE,EAAE;QACvC,IAAIA,CAAC,GAAG,CAAC,EAAE;UACTD,KAAK,IAAI,GAAG,GAAGH,OAAO,CAACI,CAAC,CAAC;SAC1B,MAAM;UACLD,KAAK,IAAIH,OAAO,CAACI,CAAC,CAAC;;;;IAIzB,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAClBV,WAAW,CAACW,GAAG,CAACC,GAAG,GAAG,IAAI,CAACC,OAAO,GAAGP,QAAQ,CAC9C;EACH;;SAnBWL,YAAY;;mBAAZA,MAAY;AAAA;;SAAZA,MAAY;EAAAa,SAAZb,MAAY;AAAA","names":["environment","AdminService","constructor","http","getList","related","endpoint","length","query","i","get","api","url","apiRoot","factory"],"sourceRoot":"","sources":["D:\\MMC\\dev\\TechnicalTests\\mmc-5418-technical-test-frontend\\app\\src\\app\\admin\\services\\admin.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UsersTransactions } from '../models/admin.model';\r\n\r\n@Injectable()\r\nexport class AdminService {\r\n  apiRoot = '/private/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n  public getList(related: string[]): Observable<UsersTransactions> {\r\n    const endpoint = 'users?related=transactions';\r\n    if (related.length) {\r\n      let query = '?related=';\r\n      for (let i = 0; i < related.length; i++) {\r\n        if (i > 0) {\r\n          query += ',' + related[i];\r\n        } else {\r\n          query += related[i];\r\n        }\r\n      }\r\n    }\r\n    return this.http.get<UsersTransactions>(\r\n      environment.api.url + this.apiRoot + endpoint\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}