{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators, FormControl } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, routeService, loginService, activatedRoute) {\n    this.fb = fb;\n    this.routeService = routeService;\n    this.loginService = loginService;\n    this.activatedRoute = activatedRoute;\n    this.loginForm = this.fb.group({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n    this.asyncError = '';\n    this.obs$ = [];\n  }\n  ngOnInit() {\n    const d = this.activatedRoute.snapshot.data;\n  }\n  ngOnDestroy() {}\n  onSubmit() {\n    // Validate login against API\n    let password = this.loginForm.value.password;\n    let username = this.loginForm.value.username;\n    const auth$ = this.loginService.login({\n      username,\n      password\n    }).subscribe({\n      next: res => {\n        console.log(res);\n        if (res.auth && res.user && res.user.role) {\n          if (res.user.role.type === 'admin') {\n            this.routeService.navigate(['/admin']);\n          } else if (res.user.role.type === 'customer') {\n            this.routeService.navigate(['/user']);\n          }\n        }\n      },\n      error: err => {\n        console.log(err);\n        this.asyncError = 'Bad credentials';\n      }\n    });\n    this.obs$.push(auth$);\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAC5D,SAAsBC,UAAU,EAAEC,WAAW,QAAQ,gBAAgB;AAY9D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YACUC,EAAe,EACfC,YAAoB,EACpBC,YAA0B,EAC1BC,cAA8B;IAH9B,OAAE,GAAFH,EAAE;IACF,iBAAY,GAAZC,YAAY;IACZ,iBAAY,GAAZC,YAAY;IACZ,mBAAc,GAAdC,cAAc;IAVjB,cAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC/BC,QAAQ,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACU,QAAQ,CAAC,CAAC;MACpDC,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACU,QAAQ,CAAC;KACpD,CAAC;IACK,eAAU,GAAW,EAAE;IACtB,SAAI,GAAG,EAAE;EAMd;EAEHE,QAAQ;IACN,MAAMC,CAAC,GAAG,IAAI,CAACN,cAAc,CAACO,QAAQ,CAACC,IAAI;EAC7C;EACAC,WAAW,IAAU;EACdC,QAAQ;IACb;IACA,IAAIN,QAAQ,GAAG,IAAI,CAACO,SAAS,CAACC,KAAK,CAACR,QAAQ;IAC5C,IAAIF,QAAQ,GAAG,IAAI,CAACS,SAAS,CAACC,KAAK,CAACV,QAAQ;IAC5C,MAAMW,KAAK,GAAG,IAAI,CAACd,YAAY,CAACe,KAAK,CAAC;MAAEZ,QAAQ;MAAEE;IAAQ,CAAE,CAAC,CAACW,SAAS,CAAC;MACtEC,IAAI,EAAGC,GAAG,IAAI;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAIA,GAAG,CAACG,IAAI,IAAIH,GAAG,CAACI,IAAI,IAAIJ,GAAG,CAACI,IAAI,CAACC,IAAI,EAAE;UACzC,IAAIL,GAAG,CAACI,IAAI,CAACC,IAAI,CAACC,IAAI,KAAK,OAAO,EAAE;YAClC,IAAI,CAACzB,YAAY,CAAC0B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;WACvC,MAAM,IAAIP,GAAG,CAACI,IAAI,CAACC,IAAI,CAACC,IAAI,KAAK,UAAU,EAAE;YAC5C,IAAI,CAACzB,YAAY,CAAC0B,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;;MAG3C,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;QAChB,IAAI,CAACC,UAAU,GAAG,iBAAiB;MACrC;KACD,CAAC;IACF,IAAI,CAACC,IAAI,CAACC,IAAI,CAAChB,KAAK,CAAC;EACvB;CACD;AAxCYlB,cAAc,eAL1BH,SAAS,CAAC;EACTsC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACWrC,cAAc,CAwC1B;SAxCYA,cAAc","names":["Component","Validators","FormControl","LoginComponent","constructor","fb","routeService","loginService","activatedRoute","group","username","required","password","ngOnInit","d","snapshot","data","ngOnDestroy","onSubmit","loginForm","value","auth$","login","subscribe","next","res","console","log","auth","user","role","type","navigate","error","err","asyncError","obs$","push","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\MMC\\dev\\TechnicalTests\\mmc-5418-technical-test-frontend\\app\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport {\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  ActivatedRoute,\r\n} from '@angular/router';\r\nimport { LoginService } from './services/login.service';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  public loginForm = this.fb.group({\r\n    username: new FormControl('', [Validators.required]),\r\n    password: new FormControl('', [Validators.required]),\r\n  });\r\n  public asyncError: string = '';\r\n  private obs$ = [];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private routeService: Router,\r\n    private loginService: LoginService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const d = this.activatedRoute.snapshot.data;\r\n  }\r\n  ngOnDestroy(): void {}\r\n  public onSubmit() {\r\n    // Validate login against API\r\n    let password = this.loginForm.value.password;\r\n    let username = this.loginForm.value.username;\r\n    const auth$ = this.loginService.login({ username, password }).subscribe({\r\n      next: (res) => {\r\n        console.log(res);\r\n        if (res.auth && res.user && res.user.role) {\r\n          if (res.user.role.type === 'admin') {\r\n            this.routeService.navigate(['/admin']);\r\n          } else if (res.user.role.type === 'customer') {\r\n            this.routeService.navigate(['/user']);\r\n          }\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n        this.asyncError = 'Bad credentials';\r\n      },\r\n    });\r\n    this.obs$.push(auth$);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}