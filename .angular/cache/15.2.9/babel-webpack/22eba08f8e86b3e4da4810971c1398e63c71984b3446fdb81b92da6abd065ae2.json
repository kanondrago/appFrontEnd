{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class BearertokenInterceptor {\n  constructor() {}\n  intercept(req, next) {\n    let modreq = req;\n    if (localStorage.getItem('authuser') !== null) {\n      console.log('entro');\n      let authuser = JSON.parse(localStorage.getItem('authuser'));\n      console.log(authuser);\n      if (authuser.auth.token !== null) {\n        modreq = req.clone({\n          setHeaders: {\n            'content-type': 'application/json',\n            Authorization: `Bearer ${authuser.auth.token}`,\n            Accept: 'application/json'\n          }\n        });\n      }\n    }\n    return next.handle(modreq);\n  }\n}\nBearertokenInterceptor.ɵfac = function BearertokenInterceptor_Factory(t) {\n  return new (t || BearertokenInterceptor)();\n};\nBearertokenInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BearertokenInterceptor,\n  factory: BearertokenInterceptor.ɵfac\n});\n{}","map":{"version":3,"mappings":";AAQA,OAAM,MAAOA,sBAAsB;EACjCC,eAAe;EACfC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAIC,MAAM,GAAGF,GAAG;IAChB,IAAIG,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;MAC7CC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpB,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACN,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MAC3DC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACG,IAAI,CAACC,KAAK,KAAK,IAAI,EAAE;QAChCT,MAAM,GAAGF,GAAG,CAACY,KAAK,CAAC;UACjBC,UAAU,EAAE;YACV,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAE,UAAUP,QAAQ,CAACG,IAAI,CAACC,KAAK,EAAE;YAC9CI,MAAM,EAAE;;SAEX,CAAC;;;IAGN,OAAOd,IAAI,CAACe,MAAM,CAACd,MAAM,CAAC;EAC5B;;AAnBWL,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAoB,SAAtBpB,sBAAsB;AAAA;AAqBnC","names":["BearertokenInterceptor","constructor","intercept","req","next","modreq","localStorage","getItem","console","log","authuser","JSON","parse","auth","token","clone","setHeaders","Authorization","Accept","handle","factory"],"sourceRoot":"","sources":["D:\\MMC\\dev\\TechnicalTests\\mmc-5418-technical-test-fullstack-app\\app\\src\\app\\shared\\interceptors\\bearertoken.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class BearertokenInterceptor implements HttpInterceptor {\r\n  constructor() {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    let modreq = req;\r\n    if (localStorage.getItem('authuser') !== null) {\r\n      console.log('entro');\r\n      let authuser = JSON.parse(localStorage.getItem('authuser'));\r\n      console.log(authuser);\r\n      if (authuser.auth.token !== null) {\r\n        modreq = req.clone({\r\n          setHeaders: {\r\n            'content-type': 'application/json',\r\n            Authorization: `Bearer ${authuser.auth.token}`,\r\n            Accept: 'application/json',\r\n          },\r\n        });\r\n      }\r\n    }\r\n    return next.handle(modreq);\r\n  }\r\n}\r\n{\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}