{"ast":null,"code":"var _class;\nimport { Validators, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./services/user.service\";\nexport class UserComponent {\n  constructor(fb, activatedRoute, userService) {\n    this.fb = fb;\n    this.activatedRoute = activatedRoute;\n    this.userService = userService;\n    this.transactionForm = this.fb.group({\n      amount: new FormControl('', [Validators.required, Validators.pattern('^[0-9]*$')]),\n      detail: new FormControl('', [Validators.required])\n    });\n    this.data = null;\n    this.obs$ = [];\n  }\n  ngOnInit() {\n    this.data = this.activatedRoute.snapshot.data['user'];\n    console.log(this.data);\n  }\n  ngOnDestroy() {\n    this.obs$.forEach(o => o.unsubscribe());\n  }\n  onSubmit() {\n    const post = {\n      detail: this.transactionForm.value.detail,\n      amount: this.transactionForm.value.amount\n    };\n    const o$ = this.userService.createTransaction(post).subscribe(postRes => {\n      console.log(postRes);\n      this.userService.getCurrentUser().subscribe(res => {\n        this.data = res;\n        console.log(this.data);\n      });\n    });\n    this.obs$.push(o$);\n  }\n}\n_class = UserComponent;\n_class.ɵfac = function UserComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.UserService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-user\"]],\n  decls: 0,\n  vars: 0,\n  template: function UserComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAAsBA,UAAU,EAAEC,WAAW,QAAQ,gBAAgB;;;;;AAWrE,OAAM,MAAOC,aAAa;EAUxBC,YACUC,EAAe,EACfC,cAA8B,EAC9BC,WAAwB;IAFxB,OAAE,GAAFF,EAAE;IACF,mBAAc,GAAdC,cAAc;IACd,gBAAW,GAAXC,WAAW;IAZd,oBAAe,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACrCC,MAAM,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAC1BD,UAAU,CAACS,QAAQ,EACnBT,UAAU,CAACU,OAAO,CAAC,UAAU,CAAC,CAC/B,CAAC;MACFC,MAAM,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACS,QAAQ,CAAC;KAClD,CAAC;IACK,SAAI,GAAkB,IAAI;IACzB,SAAI,GAAmB,EAAE;EAK9B;EAEHG,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACR,cAAc,CAACS,QAAQ,CAACD,IAAI,CAAC,MAAM,CAAC;IACrDE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,IAAI,CAAC;EACxB;EACAI,WAAW;IACT,IAAI,CAACC,IAAI,CAACC,OAAO,CAAEC,CAAC,IAAKA,CAAC,CAACC,WAAW,EAAE,CAAC;EAC3C;EAEOC,QAAQ;IACb,MAAMC,IAAI,GAAG;MACXZ,MAAM,EAAE,IAAI,CAACa,eAAe,CAACC,KAAK,CAACd,MAAM;MACzCH,MAAM,EAAE,IAAI,CAACgB,eAAe,CAACC,KAAK,CAACjB;KACpC;IACD,MAAMkB,EAAE,GAAG,IAAI,CAACpB,WAAW,CAACqB,iBAAiB,CAACJ,IAAI,CAAC,CAACK,SAAS,CAAEC,OAAO,IAAI;MACxEd,OAAO,CAACC,GAAG,CAACa,OAAO,CAAC;MACpB,IAAI,CAACvB,WAAW,CAACwB,cAAc,EAAE,CAACF,SAAS,CAACG,GAAG,IAAG;QAChD,IAAI,CAAClB,IAAI,GAAGkB,GAAG;QACfhB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,IAAI,CAAC;MACxB,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAI,CAACK,IAAI,CAACc,IAAI,CAACN,EAAE,CAAC;EACpB;;SArCWxB,aAAa;;mBAAbA,MAAa;AAAA;;QAAbA,MAAa;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["Validators","FormControl","UserComponent","constructor","fb","activatedRoute","userService","group","amount","required","pattern","detail","ngOnInit","data","snapshot","console","log","ngOnDestroy","obs$","forEach","o","unsubscribe","onSubmit","post","transactionForm","value","o$","createTransaction","subscribe","postRes","getCurrentUser","res","push","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["D:\\MMC\\dev\\TechnicalTests\\mmc-5418-technical-test-frontend\\app\\src\\app\\user\\user.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from './services/user.service';\r\nimport { Transaction, UserInterface } from './models/user.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss'],\r\n})\r\nexport class UserComponent implements OnInit, OnDestroy {\r\n  public transactionForm = this.fb.group({\r\n    amount: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[0-9]*$'),\r\n    ]),\r\n    detail: new FormControl('', [Validators.required]),\r\n  });\r\n  public data: UserInterface = null;\r\n  private obs$: Subscription[] = [];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.data = this.activatedRoute.snapshot.data['user'];\r\n    console.log(this.data);\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.obs$.forEach((o) => o.unsubscribe());\r\n  }\r\n\r\n  public onSubmit() {\r\n    const post = {\r\n      detail: this.transactionForm.value.detail,\r\n      amount: this.transactionForm.value.amount,\r\n    };\r\n    const o$ = this.userService.createTransaction(post).subscribe((postRes) => {\r\n      console.log(postRes)\r\n      this.userService.getCurrentUser().subscribe(res => {\r\n        this.data = res;\r\n        console.log(this.data)\r\n      })\r\n    });\r\n    this.obs$.push(o$);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}