{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/login.service\";\nexport class LoginResolver {\n  constructor(loginService) {\n    this.loginService = loginService;\n  }\n  resolve(route, state) {\n    const productId = this.route.snapshot.paramMap.get('productId');\n    return this.service.getProduct(productId);\n  }\n}\nLoginResolver.ɵfac = function LoginResolver_Factory(t) {\n  return new (t || LoginResolver)(i0.ɵɵinject(i1.LoginService));\n};\nLoginResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginResolver,\n  factory: LoginResolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,aAAa;EACxBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;EAAiB;EAEjDC,OAAO,CACLC,KAA6B,EAC7BC,KAA0B;IAE1B,MAAMC,SAAS,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,WAAW,CAAC;IAE/D,OAAO,IAAI,CAACC,OAAO,CAACC,UAAU,CAACL,SAAS,CAAC;EAC3C;;AAVWN,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAY,SAAbZ,aAAa;EAAAa,YADA;AAAM","names":["LoginResolver","constructor","loginService","resolve","route","state","productId","snapshot","paramMap","get","service","getProduct","factory","providedIn"],"sourceRoot":"","sources":["D:\\MMC\\dev\\TechnicalTests\\mmc-5418-technical-test-fullstack-app\\app\\src\\app\\login\\resolvers\\login.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../services/login.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginResolver implements Resolve<Observable<any>> {\r\n  constructor(private loginService: LoginService) {}\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> {\r\n    const productId = this.route.snapshot.paramMap.get('productId');\r\n\r\n    return this.service.getProduct(productId);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}