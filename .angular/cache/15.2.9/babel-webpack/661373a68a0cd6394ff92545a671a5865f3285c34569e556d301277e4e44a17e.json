{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport class BearertokenInterceptor {\n  constructor(location, locationStrategy) {\n    this.location = location;\n    this.locationStrategy = locationStrategy;\n  }\n  intercept(req, next) {\n    if (localStorage.getItem('authuser') !== null) {\n      const authuser = JSON.parse(localStorage.getItem('authuser'));\n      console.log(authuser);\n      if (authuser.auth.token !== null) {\n        const authToken = `Bearer ${authuser.auth.token}`;\n        req = req.clone({\n          headers: req.headers.set('Authorization', authToken)\n        });\n      }\n    }\n    return next.handle(req);\n  }\n}\nBearertokenInterceptor.ɵfac = function BearertokenInterceptor_Factory(t) {\n  return new (t || BearertokenInterceptor)(i0.ɵɵinject(i1.Location), i0.ɵɵinject(i1.LocationStrategy));\n};\nBearertokenInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BearertokenInterceptor,\n  factory: BearertokenInterceptor.ɵfac\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,sBAAsB;EACjCC,YACUC,QAAkB,EAClBC,gBAAkC;IADlC,aAAQ,GAARD,QAAQ;IACR,qBAAgB,GAAhBC,gBAAgB;EACvB;EACHC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;MAC7C,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MAC7DI,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACK,IAAI,CAACC,KAAK,KAAK,IAAI,EAAE;QAChC,MAAMC,SAAS,GAAG,UAAUP,QAAQ,CAACK,IAAI,CAACC,KAAK,EAAE;QACjDV,GAAG,GAAGA,GAAG,CAACY,KAAK,CAAC;UACdC,OAAO,EAAEb,GAAG,CAACa,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,SAAS;SACpD,CAAC;;;IAGN,OAAOV,IAAI,CAACc,MAAM,CAACf,GAAG,CAAC;EACzB;;AAjBWL,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAqB,SAAtBrB,sBAAsB;AAAA","names":["BearertokenInterceptor","constructor","location","locationStrategy","intercept","req","next","localStorage","getItem","authuser","JSON","parse","console","log","auth","token","authToken","clone","headers","set","handle","factory"],"sourceRoot":"","sources":["D:\\MMC\\dev\\TechnicalTests\\mmc-5418-technical-test-fullstack-app\\app\\src\\app\\shared\\interceptors\\bearertoken.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Location, LocationStrategy } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class BearertokenInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private location: Location,\r\n    private locationStrategy: LocationStrategy\r\n  ) {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    if (localStorage.getItem('authuser') !== null) {\r\n      const authuser = JSON.parse(localStorage.getItem('authuser'));\r\n      console.log(authuser);\r\n      if (authuser.auth.token !== null) {\r\n        const authToken = `Bearer ${authuser.auth.token}`;\r\n        req = req.clone({\r\n          headers: req.headers.set('Authorization', authToken),\r\n        });\r\n      }\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}