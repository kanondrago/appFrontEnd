{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(http) {\n    this.http = http;\n    this.apiRoot = '/private/users?related=transactions';\n  }\n  getList(related) {\n    if (related.length) {\n      let query = '?related=';\n      for (let i = 0; i < related.length; i++) {\n        if (i > 0) {\n          query += ',' + related[i];\n        } else {\n          query += related[i];\n        }\n      }\n    }\n    return this.http.get(environment.api.url + this.apiRoot).pipe(tap(result => {\n      console.log(result);\n    }));\n  }\n}\nAdminService.ɵfac = function AdminService_Factory(t) {\n  return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n};\nAdminService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminService,\n  factory: AdminService.ɵfac\n});","map":{"version":3,"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAASC,WAAW,QAAQ,8BAA8B;;;AAG1D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAG,qCAAqC;EAER;EAChCC,OAAO,CAACC,OAAiB;IAC9B,IAAIA,OAAO,CAACC,MAAM,EAAE;MAClB,IAAIC,KAAK,GAAG,WAAW;MACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACC,MAAM,EAAEE,CAAC,EAAE,EAAE;QACvC,IAAIA,CAAC,GAAG,CAAC,EAAE;UACTD,KAAK,IAAI,GAAG,GAAGF,OAAO,CAACG,CAAC,CAAC;SAC1B,MAAM;UACLD,KAAK,IAAIF,OAAO,CAACG,CAAC,CAAC;;;;IAIzB,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAACT,WAAW,CAACU,GAAG,CAACC,GAAG,GAAG,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,CAC3Dd,GAAG,CAAEe,MAAM,IAAI;MACbC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACrB,CAAC,CAAC,CACgB;EACtB;;AApBWb,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAgB,SAAZhB,YAAY;AAAA","names":["tap","environment","AdminService","constructor","http","getList","related","length","query","i","get","api","url","apiRoot","pipe","result","console","log","factory"],"sourceRoot":"","sources":["D:\\MMC\\dev\\TechnicalTests\\mmc-5418-technical-test-fullstack-app\\app\\src\\app\\admin\\services\\admin.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class AdminService {\r\n  apiRoot = '/private/users?related=transactions';\r\n\r\n  constructor(private http: HttpClient) {}\r\n  public getList(related: string[]) {\r\n    if (related.length) {\r\n      let query = '?related=';\r\n      for (let i = 0; i < related.length; i++) {\r\n        if (i > 0) {\r\n          query += ',' + related[i];\r\n        } else {\r\n          query += related[i];\r\n        }\r\n      }\r\n    }\r\n    return this.http.get(environment.api.url + this.apiRoot).pipe(\r\n      tap((result) => {\r\n        console.log(result);\r\n      })\r\n    ) as Observable<any>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}