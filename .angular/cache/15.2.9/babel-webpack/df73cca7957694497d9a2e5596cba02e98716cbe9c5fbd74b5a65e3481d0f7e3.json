{"ast":null,"code":"import { inject } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { UserService } from '../services/user.service';\nexport const GetUserResolver = (route, state, userService = inject(UserService)) => userService.getCurrentUser().pipe(catchError(err => {\n  return of('No data' + err);\n}));","map":{"version":3,"mappings":"AAKA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAqBC,EAAE,QAAQ,MAAM;AACrC,SAASC,UAAU,QAAa,gBAAgB;AAChD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,OAAO,MAAMC,eAAe,GAAmB,CAC7CC,KAA6B,EAC7BC,KAA0B,EAC1BC,cAA2BP,MAAM,CAACG,WAAW,CAAC,KAE9CI,WAAW,CAACC,cAAc,EAAE,CAACC,IAAI,CAC/BP,UAAU,CAAEQ,GAAG,IAAI;EACjB,OAAOT,EAAE,CAAC,SAAS,GAAGS,GAAG,CAAC;AAC5B,CAAC,CAAC,CACH","names":["inject","of","catchError","UserService","GetUserResolver","route","state","userService","getCurrentUser","pipe","err"],"sourceRoot":"","sources":["D:\\MMC\\dev\\TechnicalTests\\mmc-5418-technical-test-frontend\\app\\src\\app\\user\\resolvers\\user.resolver.ts"],"sourcesContent":["import {\r\n  ActivatedRouteSnapshot,\r\n  ResolveFn,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { inject } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { UserService } from '../services/user.service';\r\nexport const GetUserResolver: ResolveFn<any> = (\r\n  route: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot,\r\n  userService: UserService = inject(UserService)\r\n): Observable<{}> =>\r\n  userService.getCurrentUser().pipe(\r\n    catchError((err) => {\r\n      return of('No data' + err);\r\n    })\r\n  );\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}